@model Services.Domain.Admin.TimeSchedule
@{
    ViewBag.Title = "New Trip";
    Layout = "~/Views/Shared/Admin/_SuperAdminLayout.cshtml";
}

<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="card">
        <ol class="breadcrumb breadcrumb-bg-pink">
            <li><a href="@Url.Action("dashboard", "admin")"><i class="material-icons">dashboard</i> Dashboard</a></li>
            <li><a href="@Url.Action("AllTrips", "admin")"><i class="material-icons">alarm</i> Trips</a></li>
            <li class="active">New Trip</li>
        </ol>
    </div>
</div>

<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    @using (Html.BeginForm("AddNewTripInDb", "SuperAdmin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", @autocomplete = "off" }))
    {

        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ToId, new { @id="hdnTravelToId"})
        <div class="card">
            <div class="header">
                <h2><i class="material-icons">done_all</i> Fill up this form carefully</h2>
                <ul class="header-dropdown m-r--5">
                    <li>
                        <a class="btn bg-deep-purple waves-effect hover-expand-effect" href="@Url.Action("AllTrips", "admin")">
                            <i class="material-icons">settings_backup_restore</i>
                            <span>Back</span>
                        </a>
                    </li>
                    <li>
                        <button type="submit" class="btn btn-success waves-effect hover-expand-effect" onclick="return DoThisFormValidation();">
                            <i class="material-icons">done</i>
                            <span>Save</span>
                        </button>
                    </li>
                </ul>
            </div>
            <div class="body">
                <div class="clearfix">
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label for="Name">From<em class="required">*</em></label>
                            <div class="form-break">
                                @(Html.Kendo().ComboBoxFor(m => m.FromId)
                                .DataTextField("Name")
                                .DataValueField("Id")
                                .HtmlAttributes(new
                                {
                                    @class = "required-entry",
                                    style = "width: 100%;",
                                    id = "cmbFromDistrictList",
                                    @data_validation = "combo",
                                    @error_msg = "Travels from is required",
                                    @expression_msg = "District not found"
                                })
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAllDistrictListInsideBangladesh", "Common");
                                    });
                                })
                                )
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label for="Name">Sort name<em class="required">*</em></label>
                            <div class="form-break">
                                <input type="text" id="cmbToDistanceList" class="required-entry" style="width: 100%;" data-validation="combo" error-msg="Travels to is required" expression-msg="District not found" />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label for="Name">Rate<em class="required">*</em></label>
                            <div class="form-line">
                                @Html.TextBoxFor(m => m.RatePerSeat, new
                           {
                               @class = "form-control required-entry",
                               @id = "RatePerSeat",
                               @Value = "0",
                               @min="0",
                               @type = "number",
                               @required = "required",
                               @error_msg = "Rate is required",
                           })
                            </div>
                        </div>
                    </div>


                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label for="Name">Start<em class="required">*</em></label>
                            <div class="form-line">
                                @Html.TextBoxFor(m => m.StartTime, new
                           {
                               @class = "form-control required-entry",
                               @id = "StartTime",
                               @required = "required",
                               @placeholder="9.00 am",
                                @error_msg = "Start time is required",
                           })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label for="Name">Reach Time<em class="required">*</em></label>
                            <div class="form-line">
                                @Html.TextBoxFor(m => m.ReachTime, new
                           {
                               @class = "form-control required-entry",
                               @id = "ReachTime",
                               @required = "required",
                               @placeholder = "9.00 pm",
                               @error_msg = "Reach time is required",
                           })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label for="Name">Bus Number<em class="required">*</em></label>
                            <div class="form-line">
                                @Html.TextBoxFor(m => m.BusNumber, new
                           {
                               @class = "form-control required-entry",
                               @id = "BusNumber",
                               @required = "required",
                               @error_msg = "Bus number is required",
                           })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label for="Name">Company name<em class="required">*</em></label>
                            <div class="form-line">
                                @Html.TextBoxFor(m => m.ComanyName, new
                           {
                               @class = "form-control required-entry",
                               @id = "ComanyName",
                               @required = "required",
                               @error_msg = "Company name is required",
                           })
                            </div>
                        </div>
                    </div>


                    <div class="col-lg-12 col-sm-12 col-xs-12 mt-5">
                        <div class="pull-right">
                            <a class="btn bg-deep-purple waves-effect hover-expand-effect" href="@Url.Action("AllTrips", "admin")">
                                <i class="material-icons">settings_backup_restore</i>
                                <span>Back</span>
                            </a>
                            <button type="submit" class="btn btn-success waves-effect hover-expand-effect" onclick="return DoThisFormValidation();">
                                <i class="material-icons">done</i>
                                <span>Save</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }
</div>


<script type="text/javascript">

    var fromDistrictId = 0;
    $(document).ready(function () {
        $(".dummy_Trips_link").addClass("active");


        LoadDistinationDistric(fromDistrictId);

        allDistrictComboBox = $("#cmbFromDistrictList").data("kendoComboBox");

        allDistrictComboBox.bind("change", function () {

            if ((allDistrictComboBox.selectedIndex === -1 && allDistrictComboBox.value()) || allDistrictComboBox.value() == "") {
                LoadDistinationDistric(0);
            }
            else {
                fromId = allDistrictComboBox.value();
                LoadDistinationDistric(fromId);
            }
        });


    });


    function DoThisFormValidation(){
        var isFormValid = $(".required-entry").MyFormValidation();
        var toId = distinitionDistricCombo.value();
        $("#hdnTravelToId").val(toId);
        return isFormValid;
    }


    function LoadDistinationDistric(fromDistrictId) {

        $.get("/Common/GetDistrictListByRemoveParamId", { id: fromDistrictId }, function (data) {

            var dataSource = new kendo.data.DataSource({
                data: data
            });
            $("#cmbToDistanceList").kendoComboBox({
                placeholder: "Please choose",
                filter: "contains",
                dataTextField: "Name",
                dataValueField: "Id",
                autoBind: true,
                selectable: true,
                dataSource: dataSource,
                suggest: true
            });
            distinitionDistricCombo = $("#cmbToDistanceList").data("kendoComboBox");

            if (fromDistrictId == "0") {
                distinitionDistricCombo.value("");
                distinitionDistricCombo.enable(false);
            } else {
                distinitionDistricCombo.enable();
            }

        });
    }

</script>

