@using Services.Domain.Admin
@model SliderOperationModel
@{
    ViewBag.Title = "Create new slider";
    Layout = "~/Views/Shared/Admin/_SuperAdminLayout.cshtml";
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="card">
        <ol class="breadcrumb breadcrumb-bg-pink">
            <li><a href="@Url.Action("dashboard", "admin")"><i class="material-icons">dashboard</i> Dashboard</a></li>
            <li><a href="@Url.Action("Index", "sliders")"><i class="material-icons">slideshow</i> Sliders</a></li>
            <li class="active">Edit Slider</li>
        </ol>
    </div>
</div>

<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    @using (Html.BeginForm("ProcessSliderEdit", "sliders", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))

            {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.SlidersTable.Id)
        <div class="card">
            <div class="header">
                <h2><i class="material-icons">done_all</i> Fill up this form carefully</h2>
                <ul class="header-dropdown m-r--5">
                    <li>
                        <a class="btn bg-deep-purple waves-effect hover-expand-effect" href="@Url.Action("Index", "sliders")">
                            <i class="material-icons">settings_backup_restore</i>
                            <span>Back</span>
                        </a>
                    </li>
                    <li>
                        <button type="submit" class="btn btn-success waves-effect hover-expand-effect" onclick="return DoAddValidation();">
                            <i class="material-icons">done</i>
                            <span>Save</span>
                        </button>
                    </li>
                </ul>
            </div>
            <div class="body">
                <div class="clearfix">
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label>Name<em class="required">*</em></label>
                            <div class="form-line">
                                @Html.TextBoxFor(m => m.SlidersTable.Name, new
                           {
                               @class = "form-control required-entry",
                               @id = "Name",
                               @required = "required",
                               @error_msg = "Name is required",
                           })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label>Caption<em class="required">*</em></label>
                            <div class="form-line">
                                @Html.TextBoxFor(m => m.SlidersTable.Caption, new
                           {
                               @class = "form-control required-entry",
                               @id = "Caption",
                               @required = "required",
                               @error_msg = "Caption is required",
                           })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">
                        <div class="form-group">
                            <label>Active</label>
                            <div class="form-break">
                                @Html.CheckBoxFor(m => m.SlidersTable.SliderIsActive, new { @class = "switch", @Checked = "true" })
                            </div>
                        </div>
                    </div>
                    

                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="form-group">
                            <label>Image<em class="required">*</em></label>
                            <div class="form-break">
                                @Html.TextBoxFor(m => m.SlideImage, new { @class = "", @id = "slide-img", @type = "file" })
                                <img src="@Url.Content("~/" + ViewBag.ImagePath)" id="slider-image" alt="slide-img" class="img-thumbnail" />
                                <input type="hidden" id="hdnSliderImage" class="required-entry" error-msg="Slider image is required" value="images/logo.png" />
                            </div>
                        </div>
                    </div>
                    

                    <div class="col-lg-12 col-sm-12 col-xs-12 mt-5">
                        <div class="pull-right">
                            <a class="btn bg-deep-purple waves-effect hover-expand-effect" href="@Url.Action("Index", "sliders")">
                                <i class="material-icons">settings_backup_restore</i>
                                <span>Back</span>
                            </a>
                            <button type="submit" class="btn btn-success waves-effect hover-expand-effect" onclick="return DoAddValidation();">
                                <i class="material-icons">done</i>
                                <span>Save</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $(".switch").bootstrapSwitch();
        $(".dummy_slider_link").addClass("active");
        $("#slide-img").change(function () {
            readURL(this, "#slider-image");
        });

        $("#slide-thumb").change(function () {
            readURL(this, "#slider-thumb");
        });
    });

    function readURL(input, id) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $(id).attr('src', e.target.result);
            }
            $("#hdnSliderImage,#hdnSliderThumb").val(id);
            reader.readAsDataURL(input.files[0]);
        }
    }

    function DoAddValidation() {
        var isFormValid = $(".required-entry").MyFormValidation();
        return isFormValid;
    }
</script>